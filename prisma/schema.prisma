// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  phone     String   @unique
  books     Book[]
  orders    Order[]
}

model DateList {
  id        Int      @id @default(autoincrement())
  date      DateTime
  status    Boolean
  courts    Court[]
}

model Court {
  id        Int      @id @default(autoincrement())
  name      String
  dateID    Int
  date      DateList @relation(fields: [dateID], references: [id])
  playTime  Playtime[]
}

model Playtime {
  id        Int      @id @default(autoincrement())
  start     String
  end       String
  startHour Int
  status    Int // 0 (passed), 1(available), 2(booked), 4(pending)
  date      DateTime
  courtID   Int
  court     Court     @relation(fields: [courtID], references: [id])
}

model Book {
  id          Int      @id @default(autoincrement())
  date        DateTime
  court       String
  start       String
  end         String
  startHour   Int
  status      Boolean  // true if still valid time, false if passed the time
  usernameID  Int
  username    User     @relation(fields: [usernameID], references: [id])
  orderID     Int
  orderStatus Order    @relation(fields: [orderID], references: [id])
}

model Order {
  id          Int          @id @default(autoincrement())
  orderStatus String
  books       Book[]
  usernameID  Int
  username    User         @relation(fields: [usernameID], references: [id])
  createdAt   DateTime     @default(now())
  items       OrderItem[]  
}

model OrderItem {
  id      Int    @id @default(autoincrement())
  order   Order  @relation(fields: [orderID], references: [id], onDelete: Cascade)
  orderID Int
  itemID  Int 
}

